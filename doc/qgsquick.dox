/*! \page qgsquick QGIS Quick Documention

\tableofcontents

\section qgsquick_overview Overview
QGIS Quick is a QT Quick based GUI library for a mobile/tablet devices. Covering basic componens (e.g. MapCanvas, Scalebar) allows to easily create a mobile solution for surveys, data gathering or other on-site work. Qt Quick provides tools to create a rich application with a fluid and dynamic user interface. Additionally, Qt Quick Controls 2 provides highly optimized controls for embedded/mobile devices with limited resources.

\subsection qgsquick_overview_widgets QML Classes
\subsubsection qgsquick_overview_widgets_mapcanvas Map canvas
\subsubsection qgsquick_overview_widgets_featureform Feature form
\subsubsection qgsquick_overview_widgets_positionmarker Position marker
\subsubsection qgsquick_overview_widgets_photopanel PhotoPanel
\subsubsection qgsquick_overview_widgets_scalebar Scalebar

\section qgsquick_build Preparation of dev environment

\subsection qgsquick_build_linux Build Linux application,

  Follow INSTALLATION "3. Building on GNU/Linux" with CMake flags:
   \li \c  BUILD_TESTING=ON
   \li \c  WITH_QTQUICK=ON
   
  Optionally, to speed up build, you do may disable:
   \li \c  WITH_SERVER=OFF
   \li \c  WITH_GUI=OFF
   \li \c  WITH_DESKTOP=OFF
   \li \c  WITH_BINDINGS=OFF

  In the generated project, you should see target "qgis_quickapp". Build and run it to
  see QgsQuick library demo on the PC. This build can be used for development purposes
  and debugging of the library and/or an application.

\subsection qgsquick_build_androiddeps Install Android build dependencies

  Install:
    \li \c  JDK v6 or later (OpenJDK is also good)
    \li \c Apache ant] (http://ant.apache.org/bindownload.cgi) v1.8 or later
    \li \c [Qt5 for android >= 5.9] with ARMv7 arch support
    \li \c Android SDK (https://developer.android.com/studio/index.html#downloads just command line tools, API 16+)
    \li \c Android NDK (Crystax NDK 10.3.2)

  For my Kubuntu 16.04, I have used this:
  
  \code{.sh}
  sudo apt-get install openjdk-8-jre
  sudo apt-get install ant 1.8+
  # download Qt Online Installer and install Qt5.9.2 gcc_x64, android ARMv7 build tools.
  # install Android studio and with it install SDK version 16
  # install 32bit libraries
  sudo dpkg --add-architecture i386
  sudo apt -get update
  sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
  # Install Crystax NDK (https://www.crystax.net/en required by CMake)
  \endcode
  
  So at the end, I have this strucure
  \code{.unparsed}
    /opt/android-studio (GUI can be used to update/install other SDKs)
    /opt/android/sdk (folder selected by android-studio for SDKs)
    /opt/android/crystax-ndk-10.3.2 (NDK for building C++)
    /opt/Qt (Qt 5.9.2 for android arm and 64b desktop, QtCreator)
  \endcode
  
  Now try to open QtCreator, setup Kit for Android developent (GCC compiler for NDK, select SDK in "devices", select Qt for android).
  Once done, try to compile any QML example from QtCreator ("New project-> select QtQuick template), deploy on your device and try

  See (OSGeo4A)[https://github.com/opengisch/OSGeo4A/blob/master/README.md] and (Qt5)[http://doc.qt.io/qt-5/androidgs.html]
  for details.

\subsection qgsquick_build_osgeo4A Build OSGeo4A
  Clone OSGeo4A repo from https://github.com/opengisch/OSGeo4A
  Create a file config.conf in the root folder by copying the config.conf.default and modify based on your folders. For example
  
  \code{.unparsed}
  ### Currently suggested versions ####
  export ANDROIDNDKVER=r12b
  export ANDROIDAPI=16
  export ANDROIDSDK="/opt/android/sdk"
  export ANDROIDNDK="/opt/android/crystax-ndk-10.3.2"
  export QTSDK="/opt/Qt/5.9.2"
  export O4A_qgis_DIR="path/to/QGIS"
  export ARCHES=("armeabi-v7a" "x86")
  \endcode
  
  Now run command ./distribute -mqgis -dqgis to build the libraries

\subsection qgsquick_build_app Build qgis_quickapp

  To build the application,
     cd QGIS/tests/src/quickgui/app/
     cp config.pri.default config.pri
     modify config.pri (add path to your OSGeo4A repository)
     open QGIS/tests/src/quickgui/app/qgis_quickapp.pro in QtCreator and configure the project with your armeabi-v7a kit
     compile the application
  Note that if the application is build outside the main QGIS application for desktops, a build variable QML2_IMPORT_PATH has to be defined and target to the /qml subfolder of instalation folder (e.g. {QGIS_INSTALL_PATH}/qml).
  Be also sure that Qt library contains all required dependencies.
\subsection qgsquick_build_deploy Deploy APK
  If you have connected tablet/mobile with USB cable and enabled developer tools and USB debugging, you should be able to also
  "Run" qgsquick_app from QtCreator. When launched, it asks which device to use and the application will be directly launched
  on the device.

  Otherwise, your APK is located in the build directory in subfolder android-build/build/outputs/apk/. APK should contain
  all dependencies of the application, so when copied it can installed on the device.

\section qgsquick_demo_app Demo application
A demo application with some basic componets and functionality is available on https://github.com/lutraconsulting/qgis-quick-demo-app


*/


