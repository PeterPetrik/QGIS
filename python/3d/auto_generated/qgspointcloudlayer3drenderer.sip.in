/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/qgspointcloudlayer3drenderer.h                                *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsPointCloudLayer3DRendererMetadata : Qgs3DRendererAbstractMetadata
{
%Docstring
Metadata for point cloud layer 3D renderer to allow creation of its instances from XML

.. warning::

   This is not considered stable API, and may change in future QGIS releases. It is
   exposed to the Python bindings as a tech preview only.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudlayer3drenderer.h"
%End
  public:
    QgsPointCloudLayer3DRendererMetadata();

    virtual QgsAbstract3DRenderer *createRenderer( QDomElement &elem, const QgsReadWriteContext &context ) /Factory/;

%Docstring
Creates an instance of a 3D renderer based on a DOM element with renderer configuration
%End
};


class QgsPointCloudLayer3DRenderer : QgsAbstract3DRenderer
{
%Docstring
3D renderer that renders all points from a point cloud layer

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudlayer3drenderer.h"
%End
  public:
    explicit QgsPointCloudLayer3DRenderer();
%Docstring
Takes ownership of the symbol object
%End

    void setLayer( QgsPointCloudLayer *layer );
%Docstring
Sets point cloud layer associated with the renderer
%End
    QgsPointCloudLayer *layer() const;
%Docstring
Returns point cloud layer associated with the renderer
%End

    virtual QString type() const;
    virtual QgsPointCloudLayer3DRenderer *clone() const /Factory/;


    virtual void writeXml( QDomElement &elem, const QgsReadWriteContext &context ) const;

    virtual void readXml( const QDomElement &elem, const QgsReadWriteContext &context );

    virtual void resolveReferences( const QgsProject &project );


  private:
    QgsPointCloudLayer3DRenderer( const QgsPointCloudLayer3DRenderer & );
    QgsPointCloudLayer3DRenderer &operator=( const QgsPointCloudLayer3DRenderer & );
};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/3d/qgspointcloudlayer3drenderer.h                                *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
